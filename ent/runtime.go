// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/akhripko/gremlin-ent/ent/gender"
	"github.com/akhripko/gremlin-ent/ent/persona"
	"github.com/akhripko/gremlin-ent/ent/schema"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	genderFields := schema.Gender{}.Fields()
	_ = genderFields
	// genderDescID is the schema descriptor for id field.
	genderDescID := genderFields[0].Descriptor()
	// gender.IDValidator is a validator for the "id" field. It is called by the builders before save.
	gender.IDValidator = genderDescID.Validators[0].(func(int) error)
	personaFields := schema.Persona{}.Fields()
	_ = personaFields
	// personaDescAge is the schema descriptor for age field.
	personaDescAge := personaFields[1].Descriptor()
	// persona.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	persona.AgeValidator = personaDescAge.Validators[0].(func(int) error)
	// personaDescName is the schema descriptor for name field.
	personaDescName := personaFields[2].Descriptor()
	// persona.DefaultName holds the default value on creation for the name field.
	persona.DefaultName = personaDescName.Default.(string)
	// personaDescGender is the schema descriptor for gender field.
	personaDescGender := personaFields[3].Descriptor()
	// persona.DefaultGender holds the default value on creation for the gender field.
	persona.DefaultGender = personaDescGender.Default.(string)
	// personaDescID is the schema descriptor for id field.
	personaDescID := personaFields[0].Descriptor()
	// persona.IDValidator is a validator for the "id" field. It is called by the builders before save.
	persona.IDValidator = personaDescID.Validators[0].(func(int) error)
}
